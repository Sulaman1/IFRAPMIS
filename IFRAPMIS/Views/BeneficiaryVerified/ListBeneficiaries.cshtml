@using DAL.Models.Domain.MasterSetup
@model IEnumerable<BeneficiaryListViewModel>


@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
    <link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />

    <link rel="stylesheet" href="~/vendor/libs/datatables-select-bs5/select.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-checkboxes-jquery/datatables.checkboxes.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-fixedcolumns-bs5/fixedcolumns.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-fixedheader-bs5/fixedheader.bootstrap5.css">

    <link rel="stylesheet" href="~/vendor/libs/animate-css/animate.css" />
    <link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/moment/moment.js"></script>
    <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/vendor/libs/select2/select2.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
    <script src="~/vendor/libs/cleavejs/cleave.js"></script>
    <script src="~/vendor/libs/cleavejs/cleave-phone.js"></script>

    <script src="~/vendor/libs/sweetalert2/sweetalert2.js"></script>
}

@section PageScripts {
    @* <script src="~/js/app-user-list.js"></script> *@
    @* <script src="~/js/extended-ui-sweetalert2.js"></script> *@
}


<script>
    function openCommentPopup(cnic, btn) {
        Swal.fire({
            title: 'Enter Your Comment!',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: btn,
            showLoaderOnConfirm: true,
            customClass: {
                confirmButton: 'btn btn-primary me-3 waves-effect waves-light',
                cancelButton: 'btn btn-label-danger waves-effect waves-light'
            },
            preConfirm: (comment) => {
                if (!comment) {
                    Swal.showValidationMessage('You need to write a comment!');
                } else {
                    // Call the CommentBeneficiary function with comment and CNIC
                    CommentBeneficiary(comment, cnic, btn);
                }
            },
            backdrop: true,
            allowOutsideClick: () => !Swal.isLoading()
        });
    }

    function CommentBeneficiary(comment, cnic, btn) {
        // This function would handle the rejection logic
        // Example: You might send an AJAX request to your backend
        var callFunction = '';
        if (btn == "Reject") {
            callFunction = 'RejectBeneficiary';
            btn = 'Rejected';
        }
        if (btn == "OnHold") {
            callFunction = 'OnHoldBeneficiary';
        }
        $.ajax({
            url: '/BeneficiaryVerified/'+callFunction, // Your action method
            type: 'POST',
            data: { id: cnic, comment: comment },
            success: function (response) {
                Swal.fire({
                    icon: 'success',
                    title: 'Beneficiary ' + btn,
                    text: 'The beneficiary with CNIC ' + cnic + ' has been ' + btn + '.',
                    confirmButtonText: 'OK', // This will show only the OK button
                    customClass: {
                        confirmButton: 'btn btn-primary waves-effect waves-light'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Refresh the page after the user clicks "OK"
                        location.reload(); // Refresh the current page
                    }
                });;
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'There was an error processing the request.',
                    confirmButtonText: 'OK', // Ensure only OK button is shown
                    customClass: {
                        confirmButton: 'btn btn-primary waves-effect waves-light'
                    }
                });
            }
        });
    }
</script>


<!-- Users List Table -->
<div class="card">
    <div class="card-datatable table-responsive text-nowrap" style="padding-left:20px">
        <table class="datatables-users table dt-scrollableTable">
            <thead class="border-top">
                <tr>                   
                    <th>BeneficiaryName</th>                                                                            
                    <th>CNIC</th>                    
                    <th>Gender</th>
                    <th>Age</th>
                    <th>ProfilePicture</th>
                    <th>District</th>                    
                    <th>SurveyDate</th>

                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>


<script>
    // Datatable (jquery)
    $(function () {
        let borderColor, bodyBg, headingColor;

        if (isDarkStyle) {
            borderColor = config.colors_dark.borderColor;
            bodyBg = config.colors_dark.bodyBg;
            headingColor = config.colors_dark.headingColor;
        } else {
            borderColor = config.colors.borderColor;
            bodyBg = config.colors.bodyBg;
            headingColor = config.colors.headingColor;
        }

        // Variable declaration for table
        var dt_user_table = $('.datatables-users'),
            select2 = $('.select2'),
            userView = '/Users/ViewAccount',
            statusObj = {
                1: { title: 'Verified', class: 'bg-label-success' },
                2: { title: 'Rejected', class: 'bg-label-danger' },
                3: { title: 'OnHold', class: 'bg-label-warning' },
                4: { title: 'No Status', class: 'bg-label-primary' }
            };

        if (select2.length) {
            var $this = select2;
            $this.wrap('<div class="position-relative"></div>').select2({
                placeholder: 'Select Country',
                dropdownParent: $this.parent()
            });
        }

        console.log("dtuser data LENGTH: ", dt_user_table.length)
        // Users datatable
        if (dt_user_table.length) {
            console.log("dtuser data2 LENGTH: ", dt_user_table.length)
            var dt_user = dt_user_table.DataTable({
                //ajax: assetsPath + 'json/user-list.json', // JSON file to add data
                ajax: {
                    url: '/BeneficiaryVerified/ListBeneficiariesVerify', // Update this URL to point to your Index action
                    type: 'GET',
                    dataSrc: function (json) {
                        // Extract the actual data array from the wrapped structure
                        console.log('Original JSON data:', json.data.$values); // Log the entire JSON response
                        return json.data.$values || []; // Return the user array for DataTables
                    }
                    //dataSrc: 'data' // Path where your actual data is located in the JSON response
                },
                columns: [
                    // columns according to JSON

                    { data: 'beneficiaryNamePDMA' },                       
                    { data: 'cnic' },                        
                    { data: 'genderPDMA' },                       
                    { data: 'agePDMA' }, 
                    { data: 'profilePicturePDMA' },                       
                    { data: 'districtPDMA' },                    
                    { data: 'surveyDatePDMA' },
                    //{ data: 'isRejected' },
                    // { data: 'isOnHold' },
                    
                    { data: 'isRejectedPDMA' },
                    { data: 'action' }
                ],
                columnDefs: [

                    {
                        targets: 0,
                        responsivePriority: 4,
                        render: function (data, type, full, meta) {
                            var beneficiaryNamePDMA = full['beneficiaryNamePDMA'];
                            var beneficiaryNameIP = full['beneficiaryNameIP'];

                            // Show beneficiaryNamePDMA if not null, otherwise show beneficiaryNameIP
                            var displayName = (beneficiaryNamePDMA === "N/A") ? beneficiaryNameIP : beneficiaryNamePDMA;

                            return '<span class="text-heading">' + (displayName || 'N/A') + '</span>';
                        }
                    },
                    {
                        // User Status
                        targets: 1,//6
                        render: function (data, type, full, meta) {
                            var $cnic = full['cnic'];

                            return '<span class="text-heading">' + $cnic + '</span>';
                        }
                    },                    
                    {
                        // Plans
                        targets: 2,
                        render: function (data, type, full, meta) {
                            var $gender = full['genderPDMA'];
                            var $genderIP = full['genderIP'];
                            
                            var displayGender = ($gender === "N/A") ? $genderIP : $gender;

                            return '<span class="text-heading">' + (displayGender || 'N/A') + '</span>';
                        }
                    },                    
                    {
                        // User Status
                        targets: 3,//6
                        render: function (data, type, full, meta) {
                            var $age = full['agePDMA'];
                            var $ageIP = full['ageIP'];
                            
                            var displayAge = ($age === 0) ? $ageIP : $age;

                            return '<span class="text-heading">' + (displayAge || 'N/A') + '</span>';
                        }
                    },                    
                    {
                        // User Status
                        targets: 4,//6
                        render: function (data, type, full, meta) {
                            var $profilePic = full['profilePicturePDMA'];
                            var $profilePicIP = full['profilePictureIP'];
                           
                            // Check if profilePic is available and convert it to a Base64 image if it exists
                            if ($profilePic) {
                                // Construct the Base64 image source
                                var imgSrc = 'data:image/jpeg;base64,' + $profilePic;
                                return '<img src="' + imgSrc + '" alt="Profile Picture" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" />';
                            }
                            else if ($profilePicIP) {
                                // Construct the Base64 image source
                                var imgSrc = 'data:image/jpeg;base64,' + $profilePicIP;
                                return '<img src="' + imgSrc + '" alt="Profile Picture" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" />';
                            }
                            else {
                                // Return a placeholder if no profile picture is available
                                return '<img src="/img/front-pages/icons/user.png" alt="Default Profile Picture" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" />';
                            }
                        }
                    },
                    {
                        // User Status
                        targets: 5,//6
                        render: function (data, type, full, meta) {
                            var $district = full['districtPDMA'];
                            var $districtIP = full['districtIP'];
                            
                            var displayDistrict = ($district === "N/A") ? $districtIP : $district;

                            return '<span class="text-heading">' + (displayDistrict || 'N/A') + '</span>';
                        }
                    },                    
                    {
                        // User Status
                        targets: 6,//6
                        render: function (data, type, full, meta) {
                            var $surveyDate = full['surveyDatePDMA'];
                            var $surveyDateIP = full['surveyDateIP'];
                            console.log("")
                            // Check if surveyDate is available and format it
                            if ($surveyDate) {
                                // Parse the date string into a JavaScript Date object
                                var date = new Date($surveyDate);

                                // Format the date (e.g., using 'MM/DD/YYYY' or any desired format)
                                var formattedDate = date.toLocaleDateString('en-US', {
                                    year: 'numeric',
                                    month: '2-digit',
                                    day: '2-digit'
                                });

                                return '<span class="text-heading">' + formattedDate + '</span>';
                            }
                            else if ($surveyDateIP) {                                
                                    // Parse the date string into a JavaScript Date object
                                    var date = new Date($surveyDateIP);

                                    // Format the date (e.g., using 'MM/DD/YYYY' or any desired format)
                                    var formattedDate = date.toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: '2-digit',
                                        day: '2-digit'
                                    });

                                    return '<span class="text-heading">' + formattedDate + '</span>';                                
                            }else {
                                // Return a placeholder if no date is available
                                return '<span class="text-muted">N/A</span>';
                            }
                        }
                    },
                    {
                        // User Status
                        targets: 7,//6
                        title: 'Status',
                        searchable: false,
                        orderable: false,
                        render: function (data, type, full, meta) {

                            var isverifiedPDMA = full['isVerifiedPDMA'];
                            var isverifiedIP = full['isVerifiedIP'];
                            var isrejectedPDMA = full['isRejectedPDMA'];
                            var isrejectedIP = full['isRejectedIP'];
                            var isonholdPDMA = full['isOnHoldPDMA'];
                            var isonholdIP = full['isOnHoldIP'];

                            if ((isverifiedPDMA == false && isverifiedIP == false) && (isrejectedPDMA == false && isrejectedIP == false) && (isonholdPDMA == false && isonholdIP == false)) {
                                return (
                                    '<span class="badge ' +
                                    statusObj[4].class +
                                    '" text-capitalized>' +
                                    statusObj[4].title +
                                    '</span>'
                                );
                            }

                            if (isverifiedPDMA == true || isverifiedIP == true) {
                                return (
                                    '<span class="badge ' +
                                    statusObj[1].class +
                                    '" text-capitalized>' +
                                    statusObj[1].title +
                                    '</span>'
                                );
                            }
                            if (isrejectedPDMA == true || isrejectedIP == true) {
                                return (
                                    '<span class="badge ' +
                                    statusObj[2].class +
                                    '" text-capitalized>' +
                                    statusObj[2].title +
                                    '</span>'
                                );
                            }
                            if (isonholdPDMA == true || isonholdIP == true) {
                                return (
                                    '<span class="badge ' +
                                    statusObj[3].class +
                                    '" text-capitalized>' +
                                    statusObj[3].title +
                                    '</span>'
                                );
                            }
                        }
                    },                   
                    
                    {
                        // Actions
                        targets: 8,
                        title: 'Actions',
                        searchable: false,
                        orderable: false,
                        render: function (data, type, full, meta) {                            
                            if (true) {
                                return (
                                    '<div class="d-flex align-items-center">' +
                                    '<a href="/BeneficiaryVerified/CompareBeneficiaries?id=' + encodeURIComponent(full.cnic) + '" ' +  // Pass the CNIC as a query string to preview the invoice
                                        'data-bs-toggle="tooltip" class="btn btn-icon btn-text-secondary waves-effect waves-light rounded-pill" ' +
                                        'data-bs-placement="top" title="Preview Beneficiary">' +
                                        '<i class="ti ti-eye mx-2 ti-md"></i></a>' +
                                    '</div>'       
                                );
                            }
                                                 
                        
                        }
                    }
                ],
                //scrollY: '300px',
                scrollX: true, // Enable horizontal scrolling
                //order: [[2, 'desc']],
                dom:
                    '<"row"' +
                    '<"col-md-2"<"ms-n2"l>>' +
                    '<"col-md-10"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-6 mb-md-0 mt-n6 mt-md-0"fB>>' +
                    '>t' +
                    '<"row"' +
                    '<"col-sm-12 col-md-6"i>' +
                    '<"col-sm-12 col-md-6"p>' +
                    '>',
                language: {
                    sLengthMenu: '_MENU_',
                    search: '',
                    searchPlaceholder: 'Search User',
                    paginate: {
                        next: '<i class="ti ti-chevron-right ti-sm"></i>',
                        previous: '<i class="ti ti-chevron-left ti-sm"></i>'
                    }
                },
                // Buttons with Dropdown
                buttons: [
                    {
                        extend: 'collection',
                        className: 'btn btn-label-secondary dropdown-toggle mx-4 waves-effect waves-light',
                        text: '<i class="ti ti-upload me-2 ti-xs"></i>Export',
                        buttons: [
                            {
                                extend: 'print',
                                text: '<i class="ti ti-printer me-2" ></i>Print',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    // prevent avatar to be print
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            console.log("inner: ", inner);
                                            console.log("coldex: ", coldex);
                                            console.log("rowdex: ", rowdex);
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                console.log("index: ", index);
                                                console.log("item: ", item);
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                            console.log("result: ", result);

                                        }
                                    }
                                },
                                customize: function (win) {
                                    console.log("win: ", win);
                                    //customize print view for dark
                                    $(win.document.body)
                                        .css('color', headingColor)
                                        .css('border-color', borderColor)
                                        .css('background-color', bodyBg);
                                    $(win.document.body)
                                        .find('table')
                                        .addClass('compact')
                                        .css('color', 'inherit')
                                        .css('border-color', 'inherit')
                                        .css('background-color', 'inherit');
                                }
                            },
                            {
                                extend: 'csv',
                                text: '<i class="ti ti-file-text me-2" ></i>Csv',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'excel',
                                text: '<i class="ti ti-file-spreadsheet me-2"></i>Excel',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'pdf',
                                text: '<i class="ti ti-file-code-2 me-2"></i>Pdf',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'copy',
                                text: '<i class="ti ti-copy me-2" ></i>Copy',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            }
                        ]
                    }
                    
                ],
                
                initComplete: function (settings, json) {
                    dt_user_table.find('tbody tr:first').addClass('border-top-0');
                    $('.card-header').after('<hr class="my-0">');                
                    }
            });
        }
       
        // Filter form control to default size
        // ? setTimeout used for multilingual table initialization
        setTimeout(() => {
            $('.dataTables_filter .form-control').removeClass('form-control-sm');
            $('.dataTables_length .form-select').removeClass('form-select-sm');
        }, 300);
    });

</script>