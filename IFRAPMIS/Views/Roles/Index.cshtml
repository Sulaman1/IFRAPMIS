@using DAL.Models.Domain.UsersAndRoles
@using Microsoft.AspNetCore.Identity;
@* @model IEnumerable<IdentityRole> *@
@model List<RoleViewModel>


@{
    ViewData["Title"] = "Roles - Apps";
}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
}

@section PageScripts {
    @* <script src="~/js/app-access-roles.js"></script> *@
    <script src="~/js/modal-add-role.js"></script>
}

@* <!-- Include Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<!-- Include FontAwesome for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
 *@

@* ************** Content ************** *@
<h4 class="mb-1">Roles List</h4>

<p class="mb-6">A role provided access to predefined menus and features so that depending on <br> assigned role an administrator can have access to what user needs.</p>


<div class="row">
    @foreach (var role in Model)
    {
        <div class="col-xl-4 col-lg-6 col-md-6" style="padding-bottom:2%;">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h6 class="fw-normal mb-0 text-body">Total @role.UserCount users</h6>
                        <ul class="list-unstyled d-flex align-items-center avatar-group mb-0">
                            @foreach (var user in role.Users.Take(4)) // Show up to 4 avatars
                            {
                                <li data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" title="@user.Name" class="avatar pull-up">
                                    <img class="rounded-circle" src="@user.AvatarUrl" alt="Avatar">
                                </li>
                            }
                            @if (role.Users.Count > 4)
                            {
                                <li class="avatar">
                                    <span class="avatar-initial rounded-circle pull-up" data-bs-toggle="tooltip" data-bs-placement="bottom" title="@(@role.Users.Count - 4) more">+@(@role.Users.Count - 4)</span>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="d-flex justify-content-between align-items-end">
                        <div class="role-heading">
                            <h5 class="mb-1">@role.RoleName</h5>
                            @* <a href="javascript:;" data-bs-toggle="modal" data-bs-target="#addRoleModal" class="role-edit-modal"><span>Edit Role</span></a> *@
                        </div>
                        @* <a href="javascript:void(0);"><i class="ti ti-copy ti-md text-heading"></i></a> *@
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="col-xl-4 col-lg-6 col-md-6" style="padding-bottom:2%;">
        <div class="card h-100">
            <div class="row h-100">
                <div class="col-sm-3">
                    <div class="d-flex align-items-end h-100 justify-content-center mt-sm-0 mt-4">
                        <img src="~/img/illustrations/add-new-roles.png" class="img-fluid mt-sm-4 mt-md-0" alt="add-new-roles" width="83">
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="card-body text-sm-end text-center ps-sm-0">
                        <form method="post" asp-action="addrole" asp-controller="roles" class="d-flex align-items-center mb-2">
                            <div class="input-group">
                                <input name="roleName" class="form-control me-2 w-70" placeholder="Enter Role Name">
                                <button class="btn btn-sm btn-primary text-nowrap add-new-role">Add Role</button>
                            </div>
                        </form>
                        <p class="mb-0">Add new role, <br> if it doesn't exist.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

    <div class="col-12">
        <h4 class="mt-6 mb-1">Total users with their roles</h4>
        <p class="mb-0">Find all of your company’s administrator accounts and their associate roles.</p>
    </div>
 

    <!-- Users List Table -->
    <div class="card">       
        <div class="card-datatable table-responsive" style="padding-left:20px">
            <table class="datatables-users table">
                <thead class="border-top">
                    <tr>
                        @* <th>ID</th>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Plan</th>
                        <th>Status</th>
                        <th>Actions</th> *@
                        @* <th></th> *@
                        @* <th></th> *@ 
                        <th>Id</th>
                        <th>Role</th>
                        @* <th>District</th> *@
                        @* <th>Billing</th> *@
                        @* <th>Status</th> *@
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
@* 
<h1>Roles</h1>
<br />
<form method="post" asp-action="addrole" asp-controller="roles">
    <div class="input-group">
        <input name="roleName" class="form-control w-25">
        <span class="input-group-btn">
            <button class="btn btn-info">Add New Role</button>
        </span>
    </div>
</form>
<table class="table table-striped" id="roleTable">
    <thead>
        <tr>
            <th>
                Role
            </th>
            <th>
                Id
            </th>
            <th style="width:10%">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var role in Model)
        {
            <tr>
                <td>
                    @role.Name
                </td>
                <td>
                    @role.Id
                </td>
                <td class="text-right">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Action
                        </button>
                        <div class="dropdown-menu shadow animated--grow-in">
                            <a class="dropdown-item">
                                <i class="fas fa-pencil-alt"></i> Edit
                            </a>
                            <form class="d-inline">
                                <a class="dropdown-item"><i class="fas fa-trash-alt"></i> Delete</a>
                            </form>
                            @if (true)//role.Name != "SuperAdmin"
                            {
                                <a style='margin-right:16px' asp-controller="Permission" asp-action="Index" asp-route-roleId="@role.Id" class="dropdown-item">
                                    <i class="fas fa-wrench"></i> Manage Permissions
                                </a>
                            }
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
 *@


@* <!-- Include jQuery, Popper.js, and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

 *@


<script>
    // Datatable (jquery)
    $(function () {
        let borderColor, bodyBg, headingColor;

        if (isDarkStyle) {
            borderColor = config.colors_dark.borderColor;
            bodyBg = config.colors_dark.bodyBg;
            headingColor = config.colors_dark.headingColor;
        } else {
            borderColor = config.colors.borderColor;
            bodyBg = config.colors.bodyBg;
            headingColor = config.colors.headingColor;
        }

        // Variable declaration for table
        var dt_user_table = $('.datatables-users'),
            select2 = $('.select2'),
            userView = '/Users/ViewAccount',
            statusObj = {
                1: { title: 'Pending', class: 'bg-label-warning' },
                2: { title: 'Active', class: 'bg-label-success' },
                3: { title: 'Inactive', class: 'bg-label-secondary' }
            };

        if (select2.length) {
            var $this = select2;
            $this.wrap('<div class="position-relative"></div>').select2({
                placeholder: 'Select Country',
                dropdownParent: $this.parent()
            });
        }

        // Users datatable
        if (dt_user_table.length) {
            var dt_user = dt_user_table.DataTable({
                //ajax: assetsPath + 'json/user-list.json', // JSON file to add data
                ajax: {
                    url: '/Roles/Index', // Update this URL to point to your Index action
                    type: 'GET',
                    dataSrc: function (json) {
                        // Extract the actual data array from the wrapped structure
                        console.log('Original JSON data:', json.data.$values); // Log the entire JSON response
                        return json.data.$values || []; // Return the user array for DataTables
                    }
                    //dataSrc: 'data' // Path where your actual data is located in the JSON response
                },
                columns: [
                    // columns according to JSON

                    // { data: 'id' },
                    // { data: 'name' },
                    // { data: 'email' },
                    // { data: 'role' },
                    // { data: 'district' },
                    // { data: 'status' },
                    // { data: 'action', orderable: false, searchable: false }
                    // { data: 'id' },

                    { data: 'id' },
                    { data: 'name' },
                    { data: 'action'}                 
                ],
                columnDefs: [
                    // {
                    //     // For Responsive
                    //     className: 'control',
                    //     searchable: false,
                    //     orderable: false,
                    //     responsivePriority: 2,
                    //     targets: 0,
                    //     render: function (data, type, full, meta) {
                    //         return '';
                    //     }
                    // },
                    // {
                    //     // For Checkboxes
                    //     targets: 1,
                    //     orderable: false,
                    //     checkboxes: {
                    //         selectAllRender: '<input type="checkbox" class="form-check-input">'
                    //     },
                    //     render: function () {
                    //         return '<input type="checkbox" class="dt-checkboxes form-check-input" >';
                    //     },
                    //     searchable: false
                    // },
                    // {
                    //     // User full name and email
                    //     targets: 1,
                    //     responsivePriority: 4,
                    //     render: function (data, type, full, meta) {
                    //         var $name = full['name'],
                    //             $email = full['email'],
                    //             $image = full['avatar'];

                    //         var $output;

                    //         if ($image) {
                    //             // // For Avatar image
                    //             // var $output =
                    //             //     '<img src="' + assetsPath + 'img/avatars/' + $image + '" alt="Avatar" class="rounded-circle">';

                    //             // For Avatar image using Base64
                    //             $output =
                    //                 '<img src="data:image/jpeg;base64,' + $image + '" alt="Avatar" class="rounded-circle">';

                    //         } else {
                    //             // For Avatar badge
                    //             var stateNum = Math.floor(Math.random() * 6);
                    //             var states = ['success', 'danger', 'warning', 'info', 'primary', 'secondary'];
                    //             var $state = states[stateNum],
                    //                 $name = full['name'],
                    //                 $initials = $name.match(/\b\w/g) || [];
                    //             $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();
                    //             $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + '</span>';
                    //         }
                    //         // Creates full output for row
                    //         var $row_output =
                    //             '<div class="d-flex justify-content-start align-items-center user-name">' +
                    //             '<div class="avatar-wrapper">' +
                    //             '<div class="avatar avatar-sm me-4">' +
                    //             $output +
                    //             '</div>' +
                    //             '</div>' +
                    //             '<div class="d-flex flex-column">' +
                    //             '<a href="' +
                    //             userView +
                    //             '" class="text-heading text-truncate"><span class="fw-medium">' +
                    //             $name +
                    //             '</span></a>' +
                    //             '<small>' +
                    //             $email +
                    //             '</small>' +
                    //             '</div>' +
                    //             '</div>';
                    //         return $row_output;
                    //     }
                    // },
                    // {
                    //     // User Role
                    //     targets: 2,
                    //     render: function (data, type, full, meta) {
                    //         var roles = full['role']; // 'roles' contains the concatenated roles (e.g., "SuperAdmin, Admin")
                    //         var roleBadgeObj = {
                    //             SuperAdmin: '<i class="ti ti-crown ti-md text-primary me-2"></i>',
                    //             Basic: '<i class="ti ti-edit ti-md text-warning me-2"></i>',
                    //             MyRole: '<i class="ti ti-user ti-md text-success me-2"></i>',
                    //             NoRole: '<i class="ti ti-user ti-md text-success me-2"></i>',
                    //             Editor: '<i class="ti ti-chart-pie ti-md text-info me-2"></i>',
                    //             Admin: '<i class="ti ti-device-desktop ti-md text-danger me-2"></i>'
                    //         };

                    //         var roleList = roles.split(', '); // Split the concatenated roles by ", "
                    //         var roleHtml = roleList.map(function (role) {
                    //             return (
                    //                 "<span class='text-truncate d-flex align-items-center text-heading'>" +
                    //                 (roleBadgeObj[role] || '<i class="ti ti-user ti-md text-muted me-2"></i>') + // Default icon if no match
                    //                 role +
                    //                 '</span>'
                    //             );
                    //         }).join(''); // Join the HTML for multiple roles

                    //         return roleHtml; // Return all roles and their badges
                    //     }

                    // },
                    {
                        // ID
                        targets: 0,
                        responsivePriority: 4,
                        render: function (data, type, full, meta) {
                            var $plan = full['id'];

                            return '<span class="text-heading">' + $plan + '</span>';
                        }
                    },
                    {
                        // User Name
                        targets: 1,//6
                        render: function (data, type, full, meta) {
                            var $status = full['name'];

                            return '<span class="text-heading">' + $status + '</span>';
                        }
                    },
                    {
                        // Actions
                        targets: 2,
                        title: 'Actions',
                        searchable: false,
                        orderable: false,
                        render: function (data, type, full, meta) {
                            console.log("Full ACTIONS: ", full)

                            return (
                                '<div class="d-flex align-items-center">' +
                                '<div class="btn-group">' +
                                '<a href="javascript:;" class="btn btn-icon btn-text-secondary waves-effect waves-light rounded-pill dropdown-toggle hide-arrow" data-bs-toggle="dropdown">' +
                                '<i class="ti ti-dots-vertical ti-md"></i>' +
                                '</a>' +
                                '<div class="dropdown-menu dropdown-menu-end m-0">' +
                                // Manage roles
                                '<a href="/Permission/Index?roleId=' + full.id + '" class="dropdown-item">' +
                                '<i class="fas fa-wrench"></i> Manage Permissions' +
                                '</a>' +
                                // Delete Role
                                '<form action="/Roles/DeleteRole" method="post" style="display: inline;">' +
                                '<input type="hidden" name="roleId" value="' + full.id + '"/>' +
                                '<button type="submit" class="dropdown-item" onclick="return confirm(\'Are you sure you want to delete this role?\')">' +
                                '<i class="fas fa-trash"></i> Delete Role' +
                                '</button>' +
                                '</form>' +
                                // // Change district
                                // '<a href="/Identity/Account/Manage/ChangeDistrict?id=' + full.id + '" class="dropdown-item">' +
                                // '<i class="fas fa-wrench"></i> Reset District' +
                                // '</a>' +
                                '</div>' +
                                '</div>' +
                                '</div>'
                            );

                            // return (
                            //     '<div class="d-flex align-items-center">' +
                            //     // Role management dropdown
                            //     '<div class="btn-group">' +
                            //     '<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                            //     'Role' +
                            //     '</button>' +
                            //     '<div class="dropdown-menu shadow animated--grow-in">' +
                            //     '<a href="/userroles/Index?userId=' + full.id + '" class="dropdown-item">' +
                            //     '<i class="fas fa-wrench"></i> Manage Roles' +
                            //     '</a>' +
                            //     '</div>' +
                            //     '</div>' +

                            //     // Reset password link
                            //     '<a href="/Identity/Account/ResetPasswordAdmin?id=' + full.id + '" class="dropdown-item">' +
                            //     '<i class="fas fa-wrench"></i> Reset Password' +
                            //     '</a>' +

                            //     // Change district link
                            //     '<a href="/Identity/Account/Manage/ChangeDistrict?id=' + full.id + '" class="dropdown-item">' +
                            //     '<i class="fas fa-wrench"></i> Reset District' +
                            //     '</a>' +
                            //     '</div>'
                            // );

                            // return (
                            //     '<div class="d-flex align-items-center">' +
                            //     '<a href="javascript:;" class="btn btn-icon btn-text-secondary waves-effect waves-light rounded-pill delete-record"><i class="ti ti-trash ti-md"></i></a>' +
                            //     '<a href="' +
                            //     userView +
                            //     '" class="btn btn-icon btn-text-secondary waves-effect waves-light rounded-pill"><i class="ti ti-eye ti-md"></i></a>' +
                            //     '<a href="javascript:;" class="btn btn-icon btn-text-secondary waves-effect waves-light rounded-pill dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-md"></i></a>' +
                            //     '<div class="dropdown-menu dropdown-menu-end m-0">' +
                            //     '<a href="javascript:;"" class="dropdown-item">Edit</a>' +
                            //     '<a href="javascript:;" class="dropdown-item">Suspend</a>' +
                            //     '</div>' +
                            //     '</div>'
                            // );
                        }
                    }
                ],
                order: [[2, 'desc']],
                dom:
                    '<"row"' +
                    '<"col-md-2"<"ms-n2"l>>' +
                    '<"col-md-10"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-6 mb-md-0 mt-n6 mt-md-0"fB>>' +
                    '>t' +
                    '<"row"' +
                    '<"col-sm-12 col-md-6"i>' +
                    '<"col-sm-12 col-md-6"p>' +
                    '>',
                language: {
                    sLengthMenu: '_MENU_',
                    search: '',
                    searchPlaceholder: 'Search Role',
                    paginate: {
                        next: '<i class="ti ti-chevron-right ti-sm"></i>',
                        previous: '<i class="ti ti-chevron-left ti-sm"></i>'
                    }
                },
                // Buttons with Dropdown
                buttons: [
                    {
                        extend: 'collection',
                        className: 'btn btn-label-secondary dropdown-toggle mx-4 waves-effect waves-light',
                        text: '<i class="ti ti-upload me-2 ti-xs"></i>Export',
                        buttons: [
                            {
                                extend: 'print',
                                text: '<i class="ti ti-printer me-2" ></i>Print',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [0, 1],
                                    // prevent avatar to be print
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                },
                                customize: function (win) {
                                    //customize print view for dark
                                    $(win.document.body)
                                        .css('color', headingColor)
                                        .css('border-color', borderColor)
                                        .css('background-color', bodyBg);
                                    $(win.document.body)
                                        .find('table')
                                        .addClass('compact')
                                        .css('color', 'inherit')
                                        .css('border-color', 'inherit')
                                        .css('background-color', 'inherit');
                                }
                            },
                            {
                                extend: 'csv',
                                text: '<i class="ti ti-file-text me-2" ></i>Csv',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [0, 1],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'excel',
                                text: '<i class="ti ti-file-spreadsheet me-2"></i>Excel',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [0, 1],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'pdf',
                                text: '<i class="ti ti-file-code-2 me-2"></i>Pdf',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [0, 1],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'copy',
                                text: '<i class="ti ti-copy me-2" ></i>Copy',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [0, 1],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            }
                        ]
                    }
                    // ,
                    // {
                    //     text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add New User</span>',
                    //     className: 'add-new btn btn-primary waves-effect waves-light',
                    //     attr: {
                    //         'data-bs-toggle': 'offcanvas',
                    //         'data-bs-target': '#offcanvasAddUser'
                    //     }
                    // }
                ],
                // For responsive popup
                responsive: {
                    details: {
                        display: $.fn.dataTable.Responsive.display.modal({
                            header: function (row) {
                                var data = row.data();
                                return 'Details of ' + data['name'];
                            }
                        }),
                        type: 'column',
                        renderer: function (api, rowIdx, columns) {
                            var data = $.map(columns, function (col, i) {
                                return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)
                                    ? '<tr data-dt-row="' +
                                    col.rowIndex +
                                    '" data-dt-column="' +
                                    col.columnIndex +
                                    '">' +
                                    '<td>' +
                                    col.title +
                                    ':' +
                                    '</td> ' +
                                    '<td>' +
                                    col.data +
                                    '</td>' +
                                    '</tr>'
                                    : '';
                            }).join('');

                            return data ? $('<table class="table"/><tbody />').append(data) : false;
                        }
                    }
                },
                initComplete: function () {
                    // // Adding role filter once table initialized
                    // this.api()
                    //     .columns(2)//3
                        // .every(function () {
                        //     var column = this;
                        //     var select = $(
                        //         '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
                        //     )
                        //         .appendTo('.user_role')
                        //         .on('change', function () {
                        //             var val = $.fn.dataTable.util.escapeRegex($(this).val());
                        //             column.search(val ? '^' + val + '$' : '', true, false).draw();
                        //         });

                        //     column
                        //         .data()
                        //         .unique()
                        //         .sort()
                        //         .each(function (d, j) {
                        //             select.append('<option value="' + d + '">' + d + '</option>');
                        //         });
                        // });
                    // // Adding plan filter once table initialized
                    // this.api()
                    //     .columns(3)//4
                    //     .every(function () {
                    //         var column = this;
                    //         var select = $(
                    //             '<select id="UserPlan" class="form-select text-capitalize"><option value=""> Select District </option></select>'
                    //         )
                    //             .appendTo('.user_plan')
                    //             .on('change', function () {
                    //                 var val = $.fn.dataTable.util.escapeRegex($(this).val());
                    //                 column.search(val ? '^' + val + '$' : '', true, false).draw();
                    //             });

                    //         column
                    //             .data()
                    //             .unique()
                    //             .sort()
                    //             .each(function (d, j) {
                    //                 select.append('<option value="' + d + '">' + d + '</option>');
                    //             });
                    //     });
                    // // Adding status filter once table initialized
                    // this.api()
                    //     .columns(4)//6
                    //     .every(function () {
                    //         var column = this;
                    //         var select = $(
                    //             '<select id="FilterTransaction" class="form-select text-capitalize"><option value=""> Select Status </option></select>'
                    //         )
                    //             .appendTo('.user_status')
                    //             .on('change', function () {
                    //                 var val = $.fn.dataTable.util.escapeRegex($(this).val());
                    //                 column.search(val ? '^' + val + '$' : '', true, false).draw();
                    //             });

                    //         column
                    //             .data()
                    //             .unique()
                    //             .sort()
                    //             .each(function (d, j) {
                    //                 select.append(
                    //                     '<option value="' +
                    //                     statusObj[d].title +
                    //                     '" class="text-capitalize">' +
                    //                     statusObj[d].title +
                    //                     '</option>'
                    //                 );
                    //             });
                    //     });
                }
            });
        }

        // Delete Record
        $('.datatables-users tbody').on('click', '.delete-record', function () {
            dt_user.row($(this).parents('tr')).remove().draw();
        });

        // Filter form control to default size
        // ? setTimeout used for multilingual table initialization
        setTimeout(() => {
            $('.dataTables_filter .form-control').removeClass('form-control-sm');
            $('.dataTables_length .form-select').removeClass('form-select-sm');
        }, 300);
    });


</script>




<!-- Add Role Modal -->
@await Html.PartialAsync("../_Partials/_Modals/ModalAddRole")
<!-- / Add Role Modal -->

